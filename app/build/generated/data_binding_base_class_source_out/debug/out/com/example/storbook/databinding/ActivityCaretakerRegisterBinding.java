// Generated by view binder compiler. Do not edit!
package com.example.storbook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.storbook.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCaretakerRegisterBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView Email;

  @NonNull
  public final EditText caretakerEmail;

  @NonNull
  public final EditText caretakerFullName;

  @NonNull
  public final EditText caretakerPassword;

  @NonNull
  public final EditText caretakerPassword2;

  @NonNull
  public final RelativeLayout enter;

  @NonNull
  public final Button loginButton;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView password;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final Button registerLink;

  @NonNull
  public final Toolbar toolbar;

  private ActivityCaretakerRegisterBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView Email, @NonNull EditText caretakerEmail,
      @NonNull EditText caretakerFullName, @NonNull EditText caretakerPassword,
      @NonNull EditText caretakerPassword2, @NonNull RelativeLayout enter,
      @NonNull Button loginButton, @NonNull TextView name, @NonNull TextView password,
      @NonNull ProgressBar progressBar, @NonNull Button registerLink, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.Email = Email;
    this.caretakerEmail = caretakerEmail;
    this.caretakerFullName = caretakerFullName;
    this.caretakerPassword = caretakerPassword;
    this.caretakerPassword2 = caretakerPassword2;
    this.enter = enter;
    this.loginButton = loginButton;
    this.name = name;
    this.password = password;
    this.progressBar = progressBar;
    this.registerLink = registerLink;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCaretakerRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCaretakerRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_caretaker_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCaretakerRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Email;
      TextView Email = ViewBindings.findChildViewById(rootView, id);
      if (Email == null) {
        break missingId;
      }

      id = R.id.caretakerEmail;
      EditText caretakerEmail = ViewBindings.findChildViewById(rootView, id);
      if (caretakerEmail == null) {
        break missingId;
      }

      id = R.id.caretakerFullName;
      EditText caretakerFullName = ViewBindings.findChildViewById(rootView, id);
      if (caretakerFullName == null) {
        break missingId;
      }

      id = R.id.caretakerPassword;
      EditText caretakerPassword = ViewBindings.findChildViewById(rootView, id);
      if (caretakerPassword == null) {
        break missingId;
      }

      id = R.id.caretakerPassword2;
      EditText caretakerPassword2 = ViewBindings.findChildViewById(rootView, id);
      if (caretakerPassword2 == null) {
        break missingId;
      }

      id = R.id.enter;
      RelativeLayout enter = ViewBindings.findChildViewById(rootView, id);
      if (enter == null) {
        break missingId;
      }

      id = R.id.loginButton;
      Button loginButton = ViewBindings.findChildViewById(rootView, id);
      if (loginButton == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.password;
      TextView password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.registerLink;
      Button registerLink = ViewBindings.findChildViewById(rootView, id);
      if (registerLink == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityCaretakerRegisterBinding((RelativeLayout) rootView, Email, caretakerEmail,
          caretakerFullName, caretakerPassword, caretakerPassword2, enter, loginButton, name,
          password, progressBar, registerLink, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
